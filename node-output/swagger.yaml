{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Local IT Shop - OpenAPI 3.0",
    "description" : "This is a sample IT Product Store Server based on the OpenAPI 3.0 specification. \n\nSome useful links:\n- [The API repository](https://github.com/yourrepo/it-shop)",
    "termsOfService" : "http://yourshop.com/terms/",
    "contact" : {
      "email" : "apiteam@yourshop.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "externalDocs" : {
    "description" : "Find out more about IT Shop",
    "url" : "http://yourshop.com"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/HDABEK69_1/IT_Store/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  }, {
    "url" : "https://itshop.yourdomain.com/api/v1"
  } ],
  "tags" : [ {
    "name" : "product",
    "description" : "Everything about IT products",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://yourshop.com"
    }
  }, {
    "name" : "order",
    "description" : "Access to IT shop orders",
    "externalDocs" : {
      "description" : "Find out more about our orders",
      "url" : "http://yourshop.com"
    }
  }, {
    "name" : "user",
    "description" : "Operations about user"
  } ],
  "paths" : {
    "/product" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "Get all products",
        "description" : "Returns a list of all IT products in the store",
        "operationId" : "getAllProducts",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "product" ],
        "summary" : "Add a new product to the store",
        "description" : "Add a new IT product to the store",
        "operationId" : "addProduct",
        "requestBody" : {
          "description" : "Create a new product in the store",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Product"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "422" : {
            "description" : "Validation exception"
          }
        }
      }
    },
    "/product/{productId}" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "Find product by ID",
        "description" : "Returns a single product",
        "operationId" : "getProductById",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "ID of product to return",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Product not found"
          }
        }
      }
    },
    "/order" : {
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Place an order for a product",
        "description" : "Place a new order in the store",
        "operationId" : "placeOrder",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Order"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Order"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "422" : {
            "description" : "Validation exception"
          }
        }
      }
    },
    "/order/{orderId}" : {
      "get" : {
        "tags" : [ "order" ],
        "summary" : "Find purchase order by ID",
        "description" : "Returns a single order",
        "operationId" : "getOrderById",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "ID of order that needs to be fetched",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Order"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Order not found"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Product" : {
        "required" : [ "category", "name", "price" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Laptop"
          },
          "description" : {
            "type" : "string",
            "example" : "A high-end gaming laptop"
          },
          "price" : {
            "type" : "number",
            "format" : "float",
            "example" : 1499.99
          },
          "category" : {
            "type" : "string",
            "example" : "Computers"
          },
          "quantity" : {
            "type" : "integer",
            "example" : 50
          }
        }
      },
      "Order" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 10
          },
          "productId" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 2
          },
          "shipDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "description" : "Order Status",
            "example" : "approved",
            "enum" : [ "placed", "approved", "delivered" ]
          },
          "complete" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "order"
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 10
          },
          "username" : {
            "type" : "string",
            "example" : "theUser"
          },
          "firstName" : {
            "type" : "string",
            "example" : "John"
          },
          "lastName" : {
            "type" : "string",
            "example" : "James"
          },
          "email" : {
            "type" : "string",
            "example" : "john@email.com"
          },
          "password" : {
            "type" : "string",
            "example" : "12345"
          },
          "phone" : {
            "type" : "string",
            "example" : "12345"
          },
          "userStatus" : {
            "type" : "integer",
            "description" : "User Status",
            "format" : "int32",
            "example" : 1
          }
        },
        "xml" : {
          "name" : "user"
        }
      }
    },
    "requestBodies" : {
      "Product" : {
        "description" : "Product object that needs to be added to the store",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Product"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      }
    }
  }
}